git clone — это утилита командной строки Git для выбора существующего репозитория и создания его клона
 
 git init создает новый репозиторий Git. С ее помощью можно преобразовать существующий проект без управления версиями в репозиторий Git или инициализировать новый пустой репозиторий.

 git add добавляет изменение из рабочего каталога в раздел проиндексированных файлов

 git mv — удобный способ переместить файл

 git restore - Откат измененного файла с помощью ( "Git просто заменит файл последней зафиксированной версией")

 git bisect — это чрезвычайно полезная утилита для поиска коммита в котором впервые проявился баг или проблема с помощью автоматического бинарного поиска.

 git diff -  это функция, анализирующая два входных набора данных и отображающая различия между ними. (Сравнение изменений с использованием)

 git grep -  это функция которая позволяет легко искать в истории коммитов или в рабочем каталоге по строке или регулярному выражению.

 git log -  перечисляет коммиты, сделанные в репозитории в обратном к хронологическому порядке (" последние коммиты находятся вверху.")

 git show - команда которая отображает объект в простом и человекопонятном виде. Обычно она используется для просмотра информации о метке или коммите.

 git status - отображает состояние рабочего каталога и раздела проиндексированных файлов. С ее помощью можно проверить индексацию изменений и увидеть файлы, которые не отслеживаются Git.

 git branch  - позволяет создавать, просматривать, переименовывать и удалять ветки. 

 git commit - делает для проекта снимок текущего состояния изменений, добавленных в раздел проиндексированных файлов. Такие подтвержденные снимки состояния можно рассматривать как «безопасные» версии проекта — Git не будет их менять, пока вы явным образом не попросите об этом.

 git merge - выполняет слияние отдельных направлений разработки, созданных с помощью команды git branch , в единую ветку. 

 git rebase - один из способов в git, позволяющий объединить изменения двух веток. У этого способа есть преимущество перед merge (слияние) — он позволяет переписать историю ветки, придав тот истории тот вид, который нам нужен.

 git reset — это мощная команда, используемая для отмены локальных изменений в репозитории Git. Git reset работает с «тремя деревьями Git»: историей коммитов (HEAD ), разделом проиндексированных файлов и рабочим каталогом.

 git switch - используется для переключения ветвей

 git tag - обычно используется для захвата некой точки в истории, которая используется для релиза нумерованной версии (например, v1. 0.1). Теги похожи на неизменяемые ветки, но они, в отличие от веток, не имеют истории коммитов после создания.

 git fetch - загружает коммиты, файлы и ссылки из удаленного репозитория в ваш локальный репозиторий.

 git pull - используется для извлечения и загрузки содержимого из удаленного репозитория и немедленного обновления локального репозитория этим содержимым.

 git push  - используется для выгрузки содержимого локального репозитория в удаленный репозиторий. Она позволяет передать коммиты из локального репозитория в удаленный.
